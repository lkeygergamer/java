server:
  port: 8080
  servlet:
    context-path: /api

spring:
  application:
    name: projeto-java-foda
  
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect
  
  security:
    user:
      name: admin
      password: admin123

# JWT Configuration
jwt:
  secret: sua-chave-secreta-super-segura-aqui-que-deve-ter-pelo-menos-256-bits
  expiration: 86400000 # 24 horas em millisegundos

# Logging
logging:
  level:
    com.exemplo: DEBUG
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method

# Redis Configuration
spring:
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0

# Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3
      linger-ms: 1
      buffer-memory: 33554432

# Elasticsearch Configuration
  elasticsearch:
    uris: http://localhost:9200

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,configprops
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: projeto-java-foda-2025
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5,0.95,0.99

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      produtoService:
        sliding-window-size: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10000
        permitted-number-of-calls-in-half-open-state: 3
  retry:
    instances:
      produtoService:
        max-attempts: 3
        wait-duration: 1000ms
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2

# Logging Configuration
logging:
  level:
    com.exemplo: DEBUG
    org.springframework.security: DEBUG
    org.springframework.kafka: INFO
    org.springframework.data.elasticsearch: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/application.log
    max-size: 10MB
    max-history: 30 